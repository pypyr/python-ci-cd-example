tag:
  - name: pypyr.steps.default
    comment: set parameters & vars used throughout pipeline.
    in:
      defaults:
        package_name: arbpackage
        version_module_name: '{package_name}.version'
        push: false
  - name: pypyr.steps.call
    in:
      call: get_version
  - name: pypyr.steps.cmd
    description: --> make sure local branch has latest tags from origin
    in:
      cmd: git pull --tags
  - name: pypyr.steps.cmd
    in:
      cmd:
        run: git tag -l "{version}"
        save: True
  - name: pypyr.steps.stopstepgroup
    description: --> check if tag already exists
    run: !py cmdOut['stdout'] == version
  - name: pypyr.steps.cmd
    comment: tag current HEAD
    description: --> create new tag for release
    in:
      cmd: git tag "{version}"
  - name: pypyr.steps.envget
    comment: CI is true in a github action environment.
    in:
      envGet:
        env: CI
        key: isCi
        default: False
  - name: pypyr.steps.call
    comment: set git info only on ci, not local dev.
    run: '{isCi}'
    in:
      call: set_git_config
  - name: pypyr.steps.cmd
    comment: push tags only if push true
    description: --> pushing new tag to origin
    in:
      cmd: git push --tags

set_git_config:
  - name: pypyr.steps.cmd
    description: --> setting git user.name
    in:
      cmd: git config user.name github-actions
  - name: pypyr.steps.cmd
    description: --> setting git user.email
    in:
      cmd: git config user.email github-actions@github.com

get_version:
  - name: pypyr.steps.py
    description: --> get version
    in:
      pycode: |
        import importlib
        version_module = importlib.import_module(version_module_name)
        context['version'] = f'v{version_module.__version__}'
  - name: pypyr.steps.echo
    in:
      echoMe: version is {version}